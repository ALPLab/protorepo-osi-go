// Code generated by protoc-gen-go. DO NOT EDIT.
// source: osi_detectedroadmarking.proto

package osi3

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

//
// \brief A road marking in the environment as detected by the sensor.
//
// \image html OSI_DetectedRoadMarking.jpg
//
type DetectedRoadMarking struct {
	// Common information of one detected item.
	//
	Header *DetectedItemHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// The base parameters of the road marking.
	//
	// The orientation of the bounding box \c #base
	// \c BaseStationary::orientation is defined as follows:
	// The z-axis of the \c BaseStationary::orientation is the vector from the
	// 'bottom' to the 'top' of the road marking's (i.e. painted traffic sign)
	// 2D image area.
	// (Normally it is in the ground truth xy-plain.)
	// The x-axis of the \c BaseStationary::orientation is the view normal of
	// the road marking's 2D image area.
	// Normally this x-axis points to the sky.
	//
	// \note If a valid unidirectional road marking is assigned to the host
	// vehicle's current lane and the driving direction of the latter roughly
	// matches the z-axis of the \c #base \c BaseStationary::orientation then
	// the road marking is of relevance to (i.e. in effect for) the host
	// vehicle.
	//
	Base *BaseStationary `protobuf:"bytes,2,opt,name=base,proto3" json:"base,omitempty"`
	// The root mean squared error of the base parameters of the detected
	// road marking. \c RoadMarking::base has to be identical for
	// all \c #candidate road markings.
	//
	BaseRmse *BaseStationary `protobuf:"bytes,3,opt,name=base_rmse,json=baseRmse,proto3" json:"base_rmse,omitempty"`
	// A list of candidates for this road marking as estimated by the
	// sensor.
	//
	// \note OSI uses singular instead of plural for repeated field names.
	//
	Candidate            []*DetectedRoadMarking_CandidateRoadMarking `protobuf:"bytes,4,rep,name=candidate,proto3" json:"candidate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                    `json:"-"`
	XXX_unrecognized     []byte                                      `json:"-"`
	XXX_sizecache        int32                                       `json:"-"`
}

func (m *DetectedRoadMarking) Reset()         { *m = DetectedRoadMarking{} }
func (m *DetectedRoadMarking) String() string { return proto.CompactTextString(m) }
func (*DetectedRoadMarking) ProtoMessage()    {}
func (*DetectedRoadMarking) Descriptor() ([]byte, []int) {
	return fileDescriptor_257ab68d9e684cb4, []int{0}
}

func (m *DetectedRoadMarking) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DetectedRoadMarking.Unmarshal(m, b)
}
func (m *DetectedRoadMarking) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DetectedRoadMarking.Marshal(b, m, deterministic)
}
func (m *DetectedRoadMarking) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DetectedRoadMarking.Merge(m, src)
}
func (m *DetectedRoadMarking) XXX_Size() int {
	return xxx_messageInfo_DetectedRoadMarking.Size(m)
}
func (m *DetectedRoadMarking) XXX_DiscardUnknown() {
	xxx_messageInfo_DetectedRoadMarking.DiscardUnknown(m)
}

var xxx_messageInfo_DetectedRoadMarking proto.InternalMessageInfo

func (m *DetectedRoadMarking) GetHeader() *DetectedItemHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *DetectedRoadMarking) GetBase() *BaseStationary {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *DetectedRoadMarking) GetBaseRmse() *BaseStationary {
	if m != nil {
		return m.BaseRmse
	}
	return nil
}

func (m *DetectedRoadMarking) GetCandidate() []*DetectedRoadMarking_CandidateRoadMarking {
	if m != nil {
		return m.Candidate
	}
	return nil
}

//
// \brief A candidate for a detected road marking as estimated by the
// sensor.
//
type DetectedRoadMarking_CandidateRoadMarking struct {
	// The estimated probability that this candidate is the true value.
	//
	// \note The sum of all \c #probability must be one. This probability is
	// given under the condition of
	// \c DetectedItemHeader::existence_probability.
	//
	// Range: [0,1]
	//
	Probability float64 `protobuf:"fixed64,1,opt,name=probability,proto3" json:"probability,omitempty"`
	// The classification of the road marking.
	//
	// \note IDs, which are referenced in this message, usually
	// reference to \c DetectedXXX::tracking_id IDs.
	//
	Classification       *RoadMarking_Classification `protobuf:"bytes,2,opt,name=classification,proto3" json:"classification,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *DetectedRoadMarking_CandidateRoadMarking) Reset() {
	*m = DetectedRoadMarking_CandidateRoadMarking{}
}
func (m *DetectedRoadMarking_CandidateRoadMarking) String() string { return proto.CompactTextString(m) }
func (*DetectedRoadMarking_CandidateRoadMarking) ProtoMessage()    {}
func (*DetectedRoadMarking_CandidateRoadMarking) Descriptor() ([]byte, []int) {
	return fileDescriptor_257ab68d9e684cb4, []int{0, 0}
}

func (m *DetectedRoadMarking_CandidateRoadMarking) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DetectedRoadMarking_CandidateRoadMarking.Unmarshal(m, b)
}
func (m *DetectedRoadMarking_CandidateRoadMarking) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DetectedRoadMarking_CandidateRoadMarking.Marshal(b, m, deterministic)
}
func (m *DetectedRoadMarking_CandidateRoadMarking) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DetectedRoadMarking_CandidateRoadMarking.Merge(m, src)
}
func (m *DetectedRoadMarking_CandidateRoadMarking) XXX_Size() int {
	return xxx_messageInfo_DetectedRoadMarking_CandidateRoadMarking.Size(m)
}
func (m *DetectedRoadMarking_CandidateRoadMarking) XXX_DiscardUnknown() {
	xxx_messageInfo_DetectedRoadMarking_CandidateRoadMarking.DiscardUnknown(m)
}

var xxx_messageInfo_DetectedRoadMarking_CandidateRoadMarking proto.InternalMessageInfo

func (m *DetectedRoadMarking_CandidateRoadMarking) GetProbability() float64 {
	if m != nil {
		return m.Probability
	}
	return 0
}

func (m *DetectedRoadMarking_CandidateRoadMarking) GetClassification() *RoadMarking_Classification {
	if m != nil {
		return m.Classification
	}
	return nil
}

func init() {
	proto.RegisterType((*DetectedRoadMarking)(nil), "osi3.DetectedRoadMarking")
	proto.RegisterType((*DetectedRoadMarking_CandidateRoadMarking)(nil), "osi3.DetectedRoadMarking.CandidateRoadMarking")
}

func init() { proto.RegisterFile("osi_detectedroadmarking.proto", fileDescriptor_257ab68d9e684cb4) }

var fileDescriptor_257ab68d9e684cb4 = []byte{
	// 279 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0xd1, 0x41, 0x4b, 0xc3, 0x30,
	0x14, 0x07, 0x70, 0xba, 0x8d, 0xe1, 0x52, 0x10, 0x89, 0x13, 0x42, 0x41, 0x28, 0x9e, 0x7a, 0x2a,
	0xba, 0x7d, 0x83, 0xe9, 0xa1, 0x82, 0x5e, 0xe2, 0x07, 0x18, 0xaf, 0xc9, 0x53, 0xa3, 0x4b, 0xdf,
	0x48, 0x72, 0xd9, 0xd5, 0x2f, 0xed, 0x55, 0x9a, 0x76, 0xd8, 0xaa, 0x78, 0x2a, 0xfc, 0xdf, 0x2f,
	0xe9, 0xff, 0x11, 0x76, 0x49, 0xde, 0x6c, 0x35, 0x06, 0x54, 0x01, 0xb5, 0x23, 0xd0, 0x16, 0xdc,
	0xbb, 0x69, 0x5e, 0xca, 0xbd, 0xa3, 0x40, 0x7c, 0x46, 0xde, 0xac, 0xb3, 0xb3, 0x16, 0x29, 0xb2,
	0x96, 0x9a, 0x2e, 0xcf, 0x2e, 0xda, 0xe4, 0x17, 0xcf, 0xc4, 0xf0, 0x36, 0xaa, 0xdf, 0x50, 0x85,
	0x6e, 0x72, 0xf5, 0x39, 0x61, 0xe7, 0x77, 0xfd, 0x40, 0x12, 0xe8, 0xc7, 0xee, 0x1c, 0xbf, 0x66,
	0xf3, 0x57, 0x04, 0x8d, 0x4e, 0x24, 0x79, 0x52, 0xa4, 0x2b, 0x51, 0xb6, 0x7f, 0x2c, 0x8f, 0xf4,
	0x3e, 0xa0, 0xad, 0xe2, 0x5c, 0xf6, 0x8e, 0x17, 0x6c, 0x56, 0x83, 0x47, 0x31, 0x89, 0x7e, 0xd9,
	0xf9, 0x0d, 0x78, 0x7c, 0x0a, 0x10, 0x0c, 0x35, 0xe0, 0x0e, 0x32, 0x0a, 0x7e, 0xc3, 0x16, 0xed,
	0x77, 0xeb, 0xac, 0x47, 0x31, 0xfd, 0x87, 0x9f, 0xb4, 0x4c, 0x5a, 0x8f, 0xfc, 0x81, 0x2d, 0x14,
	0x34, 0xda, 0x68, 0x08, 0x28, 0x66, 0xf9, 0xb4, 0x48, 0x57, 0xe5, 0xb8, 0xd1, 0xa0, 0x7c, 0x79,
	0x7b, 0xa4, 0x83, 0x50, 0x7e, 0x5f, 0x90, 0x7d, 0x24, 0x6c, 0xf9, 0x97, 0xe1, 0x39, 0x4b, 0xf7,
	0x8e, 0x6a, 0xa8, 0xcd, 0xce, 0x84, 0x43, 0x5c, 0x3d, 0x91, 0xc3, 0x88, 0x57, 0xec, 0x54, 0xed,
	0xc0, 0x7b, 0xf3, 0x6c, 0x54, 0xec, 0xd9, 0xef, 0x9b, 0x77, 0x6d, 0x46, 0x2d, 0x46, 0x4e, 0xfe,
	0x38, 0xb7, 0x99, 0x54, 0x49, 0x3d, 0x8f, 0x8f, 0xb0, 0xfe, 0x0a, 0x00, 0x00, 0xff, 0xff, 0xec,
	0x23, 0x89, 0x74, 0xee, 0x01, 0x00, 0x00,
}
