// Code generated by protoc-gen-go. DO NOT EDIT.
// source: osi_detectedlane.proto

package osi3

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

//
// \brief A lane segment as detected by the sensor.
//
type DetectedLane struct {
	// Common information of one detected item.
	//
	Header *DetectedItemHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// A list of candidates for this lane as estimated by the sensor.
	//
	// \note OSI uses singular instead of plural for repeated field names.
	//
	Candidate            []*DetectedLane_CandidateLane `protobuf:"bytes,2,rep,name=candidate,proto3" json:"candidate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *DetectedLane) Reset()         { *m = DetectedLane{} }
func (m *DetectedLane) String() string { return proto.CompactTextString(m) }
func (*DetectedLane) ProtoMessage()    {}
func (*DetectedLane) Descriptor() ([]byte, []int) {
	return fileDescriptor_1135e134619d1762, []int{0}
}

func (m *DetectedLane) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DetectedLane.Unmarshal(m, b)
}
func (m *DetectedLane) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DetectedLane.Marshal(b, m, deterministic)
}
func (m *DetectedLane) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DetectedLane.Merge(m, src)
}
func (m *DetectedLane) XXX_Size() int {
	return xxx_messageInfo_DetectedLane.Size(m)
}
func (m *DetectedLane) XXX_DiscardUnknown() {
	xxx_messageInfo_DetectedLane.DiscardUnknown(m)
}

var xxx_messageInfo_DetectedLane proto.InternalMessageInfo

func (m *DetectedLane) GetHeader() *DetectedItemHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *DetectedLane) GetCandidate() []*DetectedLane_CandidateLane {
	if m != nil {
		return m.Candidate
	}
	return nil
}

//
// \brief A candidate for a detected lane as estimated by the
// sensor.
//
type DetectedLane_CandidateLane struct {
	// The estimated probability that this candidate is the true value.
	//
	// \note The sum of all \c #probability must be one. This probability is
	// given under the condition of
	// \c DetectedItemHeader::existence_probability.
	//
	// Range: [0,1]
	//
	Probability float64 `protobuf:"fixed64,1,opt,name=probability,proto3" json:"probability,omitempty"`
	// The classification of one lane that defines this candidate.
	//
	// \note IDs, which are referenced in this message, usually
	// reference to \c DetectedXXX::tracking_id IDs.
	//
	Classification       *Lane_Classification `protobuf:"bytes,2,opt,name=classification,proto3" json:"classification,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *DetectedLane_CandidateLane) Reset()         { *m = DetectedLane_CandidateLane{} }
func (m *DetectedLane_CandidateLane) String() string { return proto.CompactTextString(m) }
func (*DetectedLane_CandidateLane) ProtoMessage()    {}
func (*DetectedLane_CandidateLane) Descriptor() ([]byte, []int) {
	return fileDescriptor_1135e134619d1762, []int{0, 0}
}

func (m *DetectedLane_CandidateLane) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DetectedLane_CandidateLane.Unmarshal(m, b)
}
func (m *DetectedLane_CandidateLane) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DetectedLane_CandidateLane.Marshal(b, m, deterministic)
}
func (m *DetectedLane_CandidateLane) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DetectedLane_CandidateLane.Merge(m, src)
}
func (m *DetectedLane_CandidateLane) XXX_Size() int {
	return xxx_messageInfo_DetectedLane_CandidateLane.Size(m)
}
func (m *DetectedLane_CandidateLane) XXX_DiscardUnknown() {
	xxx_messageInfo_DetectedLane_CandidateLane.DiscardUnknown(m)
}

var xxx_messageInfo_DetectedLane_CandidateLane proto.InternalMessageInfo

func (m *DetectedLane_CandidateLane) GetProbability() float64 {
	if m != nil {
		return m.Probability
	}
	return 0
}

func (m *DetectedLane_CandidateLane) GetClassification() *Lane_Classification {
	if m != nil {
		return m.Classification
	}
	return nil
}

//
// \brief A lane boundary segment as detected by the sensor.
//
type DetectedLaneBoundary struct {
	// Common information of one detected item.
	//
	Header *DetectedItemHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// A list of candidates for this lane boundary as estimated by the
	// sensor.
	//
	// \note OSI uses singular instead of plural for repeated field names.
	//
	Candidate []*DetectedLaneBoundary_CandidateLaneBoundary `protobuf:"bytes,2,rep,name=candidate,proto3" json:"candidate,omitempty"`
	// The list of individual points defining the location of the lane boundary
	// (as a list of segments).
	//
	// Since a \c BoundaryPoint is part of a sequence, only the position
	// attribute has to be set for each instance. All other values will be
	// reused from the previous \c BoundaryPoint in the sequence or set to
	// default values if there is none or it was never set. For dashed lines,
	// one \c LaneBoundary::BoundaryPoint has to be at the start and another at
	// the end of each dashed line segment. For Botts' dots lines, one \c
	// LaneBoundary::BoundaryPoint position has to define each Botts' dot.
	//
	// \attention For \c LaneBoundary::BoundaryPoint the same rules regarding
	// maximum distance and approximation error apply as for \c
	// Lane::Classification::centerline.
	//
	BoundaryLine []*LaneBoundary_BoundaryPoint `protobuf:"bytes,3,rep,name=boundary_line,json=boundaryLine,proto3" json:"boundary_line,omitempty"`
	// The root mean squared error of the \c LaneBoundary::BoundaryPoint.
	// Each \c #candidate has the same \c #boundary_line points and exact
	// one \c #boundary_line_rmse rmse confidence value is
	// specified which is suitable for all candidates.
	//
	BoundaryLineRmse []*LaneBoundary_BoundaryPoint `protobuf:"bytes,4,rep,name=boundary_line_rmse,json=boundaryLineRmse,proto3" json:"boundary_line_rmse,omitempty"`
	// Confidence of the segments of the \c LaneBoundary::BoundaryPoint.
	// Each \c #candidate has the same \c #boundary_line points and exact
	// one \c #boundary_line_confidences confidence value is
	// specified which is suitable for all candidates.
	//
	// Range: [0,1]
	//
	BoundaryLineConfidences []float64 `protobuf:"fixed64,5,rep,packed,name=boundary_line_confidences,json=boundaryLineConfidences,proto3" json:"boundary_line_confidences,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}  `json:"-"`
	XXX_unrecognized        []byte    `json:"-"`
	XXX_sizecache           int32     `json:"-"`
}

func (m *DetectedLaneBoundary) Reset()         { *m = DetectedLaneBoundary{} }
func (m *DetectedLaneBoundary) String() string { return proto.CompactTextString(m) }
func (*DetectedLaneBoundary) ProtoMessage()    {}
func (*DetectedLaneBoundary) Descriptor() ([]byte, []int) {
	return fileDescriptor_1135e134619d1762, []int{1}
}

func (m *DetectedLaneBoundary) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DetectedLaneBoundary.Unmarshal(m, b)
}
func (m *DetectedLaneBoundary) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DetectedLaneBoundary.Marshal(b, m, deterministic)
}
func (m *DetectedLaneBoundary) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DetectedLaneBoundary.Merge(m, src)
}
func (m *DetectedLaneBoundary) XXX_Size() int {
	return xxx_messageInfo_DetectedLaneBoundary.Size(m)
}
func (m *DetectedLaneBoundary) XXX_DiscardUnknown() {
	xxx_messageInfo_DetectedLaneBoundary.DiscardUnknown(m)
}

var xxx_messageInfo_DetectedLaneBoundary proto.InternalMessageInfo

func (m *DetectedLaneBoundary) GetHeader() *DetectedItemHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *DetectedLaneBoundary) GetCandidate() []*DetectedLaneBoundary_CandidateLaneBoundary {
	if m != nil {
		return m.Candidate
	}
	return nil
}

func (m *DetectedLaneBoundary) GetBoundaryLine() []*LaneBoundary_BoundaryPoint {
	if m != nil {
		return m.BoundaryLine
	}
	return nil
}

func (m *DetectedLaneBoundary) GetBoundaryLineRmse() []*LaneBoundary_BoundaryPoint {
	if m != nil {
		return m.BoundaryLineRmse
	}
	return nil
}

func (m *DetectedLaneBoundary) GetBoundaryLineConfidences() []float64 {
	if m != nil {
		return m.BoundaryLineConfidences
	}
	return nil
}

//
// \brief A candidate for a detected lane boundary as estimated by the
// sensor.
//
type DetectedLaneBoundary_CandidateLaneBoundary struct {
	// The estimated probability that this candidate is the true value.
	//
	// \note The sum of all \c #probability must be one. This probability is
	// given under the condition of
	// \c DetectedItemHeader::existence_probability.
	//
	// Range: [0,1]
	//
	Probability float64 `protobuf:"fixed64,1,opt,name=probability,proto3" json:"probability,omitempty"`
	// The classification of one lane boundary that defines this candidate.
	//
	// \note IDs, which are referenced in this message, usually
	// reference to \c DetectedXXX::tracking_id IDs.
	//
	Classification       *LaneBoundary_Classification `protobuf:"bytes,2,opt,name=classification,proto3" json:"classification,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *DetectedLaneBoundary_CandidateLaneBoundary) Reset() {
	*m = DetectedLaneBoundary_CandidateLaneBoundary{}
}
func (m *DetectedLaneBoundary_CandidateLaneBoundary) String() string {
	return proto.CompactTextString(m)
}
func (*DetectedLaneBoundary_CandidateLaneBoundary) ProtoMessage() {}
func (*DetectedLaneBoundary_CandidateLaneBoundary) Descriptor() ([]byte, []int) {
	return fileDescriptor_1135e134619d1762, []int{1, 0}
}

func (m *DetectedLaneBoundary_CandidateLaneBoundary) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DetectedLaneBoundary_CandidateLaneBoundary.Unmarshal(m, b)
}
func (m *DetectedLaneBoundary_CandidateLaneBoundary) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DetectedLaneBoundary_CandidateLaneBoundary.Marshal(b, m, deterministic)
}
func (m *DetectedLaneBoundary_CandidateLaneBoundary) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DetectedLaneBoundary_CandidateLaneBoundary.Merge(m, src)
}
func (m *DetectedLaneBoundary_CandidateLaneBoundary) XXX_Size() int {
	return xxx_messageInfo_DetectedLaneBoundary_CandidateLaneBoundary.Size(m)
}
func (m *DetectedLaneBoundary_CandidateLaneBoundary) XXX_DiscardUnknown() {
	xxx_messageInfo_DetectedLaneBoundary_CandidateLaneBoundary.DiscardUnknown(m)
}

var xxx_messageInfo_DetectedLaneBoundary_CandidateLaneBoundary proto.InternalMessageInfo

func (m *DetectedLaneBoundary_CandidateLaneBoundary) GetProbability() float64 {
	if m != nil {
		return m.Probability
	}
	return 0
}

func (m *DetectedLaneBoundary_CandidateLaneBoundary) GetClassification() *LaneBoundary_Classification {
	if m != nil {
		return m.Classification
	}
	return nil
}

func init() {
	proto.RegisterType((*DetectedLane)(nil), "osi3.DetectedLane")
	proto.RegisterType((*DetectedLane_CandidateLane)(nil), "osi3.DetectedLane.CandidateLane")
	proto.RegisterType((*DetectedLaneBoundary)(nil), "osi3.DetectedLaneBoundary")
	proto.RegisterType((*DetectedLaneBoundary_CandidateLaneBoundary)(nil), "osi3.DetectedLaneBoundary.CandidateLaneBoundary")
}

func init() { proto.RegisterFile("osi_detectedlane.proto", fileDescriptor_1135e134619d1762) }

var fileDescriptor_1135e134619d1762 = []byte{
	// 345 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x52, 0x4d, 0x6b, 0x32, 0x31,
	0x10, 0x66, 0x5d, 0x5f, 0xe1, 0x8d, 0x1f, 0x94, 0xd0, 0x8f, 0xb8, 0xa7, 0xad, 0x27, 0x4f, 0x8b,
	0xe8, 0xad, 0x87, 0x42, 0xb5, 0x05, 0x05, 0x91, 0x92, 0x3f, 0x20, 0xd9, 0x64, 0xa4, 0x29, 0x6b,
	0x22, 0x9b, 0xf4, 0xe0, 0xbd, 0xbf, 0xb8, 0x87, 0x9e, 0xcb, 0xae, 0x2e, 0x26, 0xd5, 0x16, 0xe9,
	0x6d, 0x77, 0x9e, 0x8f, 0x99, 0x79, 0x26, 0xe8, 0x5a, 0x1b, 0xb9, 0x14, 0x60, 0x81, 0x5b, 0x10,
	0x19, 0x53, 0x90, 0x6c, 0x72, 0x6d, 0x35, 0xae, 0x6b, 0x23, 0x47, 0x51, 0xa7, 0x40, 0x0f, 0xd5,
	0x88, 0xb8, 0x6c, 0x9d, 0xbe, 0x02, 0xb7, 0x3b, 0xa4, 0xf7, 0x19, 0xa0, 0xd6, 0xe3, 0x1e, 0x98,
	0x33, 0x05, 0x78, 0x80, 0x1a, 0x2f, 0xc0, 0x04, 0xe4, 0x24, 0x88, 0x83, 0x7e, 0x73, 0x48, 0x92,
	0xc2, 0x31, 0xa9, 0x38, 0x33, 0x0b, 0xeb, 0x69, 0x89, 0xd3, 0x3d, 0x0f, 0xdf, 0xa3, 0xff, 0x9c,
	0x29, 0x21, 0x05, 0xb3, 0x40, 0x6a, 0x71, 0xd8, 0x6f, 0x0e, 0x63, 0x5f, 0x54, 0x18, 0x27, 0x93,
	0x8a, 0x53, 0xfc, 0xd1, 0x83, 0x24, 0xb2, 0xa8, 0xed, 0x61, 0x38, 0x46, 0xcd, 0x4d, 0xae, 0x53,
	0x96, 0xca, 0x4c, 0xda, 0x6d, 0x39, 0x47, 0x40, 0xdd, 0x12, 0x7e, 0x40, 0x1d, 0x9e, 0x31, 0x63,
	0xe4, 0x4a, 0x72, 0x66, 0xa5, 0x56, 0xa4, 0x56, 0x0e, 0xdb, 0xdd, 0xf5, 0xdd, 0xf5, 0xf3, 0x08,
	0xf4, 0x9b, 0xa0, 0xf7, 0x11, 0xa2, 0x4b, 0x77, 0xbe, 0xb1, 0x7e, 0x53, 0x82, 0xe5, 0xdb, 0x3f,
	0x04, 0xb0, 0x38, 0x0e, 0x60, 0x70, 0x1c, 0x40, 0xd5, 0xc0, 0x0f, 0xa2, 0xaa, 0x3a, 0x81, 0xe0,
	0x27, 0xd4, 0x4e, 0xf7, 0xe5, 0x65, 0x26, 0x15, 0x90, 0xd0, 0x0d, 0xd5, 0xf3, 0xaa, 0x3e, 0x9e,
	0xb5, 0x54, 0x96, 0xb6, 0x2a, 0xd9, 0x5c, 0x2a, 0xc0, 0x0b, 0x84, 0x3d, 0x9b, 0x65, 0xbe, 0x36,
	0x40, 0xea, 0x67, 0x7a, 0x5d, 0xb8, 0x5e, 0x74, 0x6d, 0x00, 0xdf, 0xa1, 0xae, 0xef, 0xc7, 0xb5,
	0x5a, 0x49, 0x01, 0x8a, 0x83, 0x21, 0xff, 0xe2, 0xb0, 0x1f, 0xd0, 0x1b, 0x57, 0x34, 0x39, 0xc0,
	0xd1, 0x7b, 0x80, 0xae, 0x4e, 0xee, 0x7d, 0xc6, 0xb1, 0x67, 0x3f, 0x1c, 0xfb, 0xf6, 0xc4, 0x0e,
	0xbf, 0x1f, 0x7d, 0x5c, 0x9b, 0x06, 0x69, 0xa3, 0x7c, 0xf8, 0xa3, 0xaf, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x41, 0xd8, 0xd7, 0xf5, 0x42, 0x03, 0x00, 0x00,
}
